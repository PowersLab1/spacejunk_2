{"ast":null,"code":"import _objectSpread from\"/Users/msg74/Desktop/powers_lab/psychedelics_dissertation/Aim1_Online_Survey_Tasks/Tasks/SpaceGame/spacejunk_bl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/msg74/Desktop/powers_lab/psychedelics_dissertation/Aim1_Online_Survey_Tasks/Tasks/SpaceGame/spacejunk_bl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{parse}from\"query-string\";import\"questlib\";import addScript from'../functions/addScript';import{useLocation}from'react-router-dom/cjs/react-router-dom.min';import{Completed}from'../components/Completed';import{LoadingScript}from'../components/LoadingScript';import{awsFetchLink}from'../functions/saveTaskData';import config from\"../config\";export var LabJSWrapperModern=function LabJSWrapperModern(){// ADDSCRIPT, COMPLETED, PLAYING\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),attempts=_useState2[0],setAttempts=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),success=_useState4[0],setSuccess=_useState4[1];// State that handles the Output to Render / If data needs changing\nvar _useState5=useState(\"ADDSCRIPT\"),_useState6=_slicedToArray(_useState5,2),state=_useState6[0],setState=_useState6[1];// State that stores MetaData output for Sending to Backend\nvar _useState7=useState({encrypted_metadata:undefined,taskName:undefined,taskVersion:undefined,link:undefined,returning:false,data:[]}),_useState8=_slicedToArray(_useState7,2),gameState=_useState8[0],setGameState=_useState8[1];// State that stores if the Game Script has successfully loaded\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),scriptLoaded=_useState10[0],setScriptLoaded=_useState10[1];// UseLocation Hook to get URL Query String\nvar _useLocation=useLocation(),search=_useLocation.search;// Runs once on load\nuseEffect(function(){// Parse get params for encrypted metadata\nvar params=parse(search,{ignoreQueryPrefix:true});console.log(params);console.log(\"Params Id \".concat(params.id));// !!! REMOVE THIS LINE, ONLY FOR DEV\nif(process.env.NODE_ENV===\"development\"){console.log(\"Adding Params ID as in dev\");params.id=\"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\";}var newState={encryptedMetadata:params.id,taskName:config.taskName,taskVersion:config.taskVersion,link:params.survey_url};console.log(\"NEW STATE: \".concat(JSON.stringify(newState)));if(newState.encryptedMetadata!=undefined){addScript(process.env.PUBLIC_URL+'/external/lab.js',\"LabJs\");}setGameState(newState);// Add the Game Script\nif(document.getElementById(\"canvasScript\")===undefined||document.getElementById(\"canvasScript\")===null){addScript(\"\".concat(process.env.PUBLIC_URL,\"/script.js\"),\"canvasScript\");}// ------------------\n// Event Listeners\n// ------------------\nvar scriptLoaded=function scriptLoaded(event){console.log(\"script loaded\");setScriptLoaded(true);};// Runs when the game has completed\nvar onComplete=function onComplete(event){// Your logic here\nconsole.log(\"Game Complete\");setState(\"COMPLETED\");};// Add event listener for when the game is complete\nwindow.addEventListener('completed',onComplete);window.addEventListener(\"scriptLoaded\",scriptLoaded);return function(){// Remove the listeners when the page unloads\nwindow.removeEventListener('completed',onComplete);window.removeEventListener(\"scriptLoaded\",scriptLoaded);};},[]);// This runs when the \"Script Loaded\" state is changed\nuseEffect(function(){console.log(\"SCRIPT LOADED UEF\",scriptLoaded);// If the Script Loaded state has been set to true\nif(scriptLoaded){// Check for the previous result data in localStorage\nif(// TODO: GIVE THIS A BETTER NAME / MAKE IT DYNAMIC\nlocalStorage.getItem(\"TestResults\")!=undefined&&localStorage.getItem(\"TestResults\")!=\"undefined\"&&JSON.parse(localStorage.getItem(\"TestResults\")).length>0){// If we have completed the game, we know the results are complete and can be sent\nif(localStorage.getItem(\"completed\")===true||localStorage.getItem(\"completed\")===\"true\"){console.warn(\"COMPLETE IS TRUE\");// We have previously completed but sending didn't work\n// Should redirect back to completed page\n// But should make a note that they are returning so that can abandon\nsetGameState(_objectSpread(_objectSpread({},gameState),{},{returning:true}));setState(\"COMPLETED\");return;}// Otherwise, we want to remove partial results and restart\nconsole.log(\"Previous Data found, removing\");setGameState(localStorage.removeItem(\"TestResults\"));}setState(\"PLAYING\");}},[scriptLoaded]);console.log(state);var root=document.getElementById(\"root\");var canvas=document.getElementById(\"canvas\");// Now that we have set if we are using root or canvas\n// Handle the state to return the right view and data\nswitch(state){case\"COMPLETED\":root.hidden=false;canvas.hidden=true;return/*#__PURE__*/React.createElement(Completed,{gameState:gameState});break;case\"PLAYING\":// root.hidden = false;\n// canvas.hidden = true;\n// return <Completed gameState={gameState} />;\nroot.hidden=true;canvas.hidden=false;return null;break;case\"ADDSCRIPT\":// return <Completed gameState={gameState} />;\nreturn/*#__PURE__*/React.createElement(LoadingScript,null);default:return null;}};","map":{"version":3,"names":["React","useEffect","useState","parse","addScript","useLocation","Completed","LoadingScript","awsFetchLink","config","LabJSWrapperModern","_useState","_useState2","_slicedToArray","attempts","setAttempts","_useState3","_useState4","success","setSuccess","_useState5","_useState6","state","setState","_useState7","encrypted_metadata","undefined","taskName","taskVersion","link","returning","data","_useState8","gameState","setGameState","_useState9","_useState10","scriptLoaded","setScriptLoaded","_useLocation","search","params","ignoreQueryPrefix","console","log","concat","id","process","env","NODE_ENV","newState","encryptedMetadata","survey_url","JSON","stringify","PUBLIC_URL","document","getElementById","event","onComplete","window","addEventListener","removeEventListener","localStorage","getItem","length","warn","_objectSpread","removeItem","root","canvas","hidden","createElement"],"sources":["/Users/msg74/Desktop/powers_lab/psychedelics_dissertation/Aim1_Online_Survey_Tasks/Tasks/SpaceGame/spacejunk_bl/src/containers/LabJSWrapperModern.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { parse } from \"query-string\";\r\nimport \"questlib\";\r\nimport addScript from '../functions/addScript';\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Completed } from '../components/Completed';\r\nimport { LoadingScript } from '../components/LoadingScript';\r\nimport { awsFetchLink } from '../functions/saveTaskData';\r\nimport config from \"../config\";\r\n\r\nexport const LabJSWrapperModern = () => {\r\n    // ADDSCRIPT, COMPLETED, PLAYING\r\n    const [attempts, setAttempts] = useState(0);\r\n    const [success, setSuccess] = useState(false);\r\n    // State that handles the Output to Render / If data needs changing\r\n    const [state, setState] = useState(\"ADDSCRIPT\");\r\n    // State that stores MetaData output for Sending to Backend\r\n    const [gameState, setGameState] = useState({\r\n        encrypted_metadata: undefined,\r\n        taskName: undefined,\r\n        taskVersion: undefined,\r\n        link: undefined,\r\n        returning: false,\r\n        data: []\r\n    });\r\n    // State that stores if the Game Script has successfully loaded\r\n    const [scriptLoaded, setScriptLoaded] = useState(false);\r\n    // UseLocation Hook to get URL Query String\r\n    const { search } = useLocation();\r\n\r\n    // Runs once on load\r\n    useEffect(() => {\r\n\r\n        // Parse get params for encrypted metadata\r\n        const params = parse(\r\n            search,\r\n            { ignoreQueryPrefix: true }\r\n        );\r\n        console.log(params)\r\n\r\n        console.log(`Params Id ${params.id}`);\r\n        // !!! REMOVE THIS LINE, ONLY FOR DEV\r\n        if (process.env.NODE_ENV === \"development\") {\r\n            console.log(\"Adding Params ID as in dev\");\r\n            params.id = \"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\";\r\n        }\r\n\r\n        const newState = {\r\n            encryptedMetadata: params.id,\r\n            taskName: config.taskName,\r\n            taskVersion: config.taskVersion,\r\n            link: params.survey_url\r\n        };\r\n\r\n        console.log(`NEW STATE: ${JSON.stringify(newState)}`);\r\n\r\n        if (newState.encryptedMetadata != undefined) {\r\n            addScript(process.env.PUBLIC_URL + '/external/lab.js', \"LabJs\");\r\n        }\r\n\r\n        setGameState(newState);\r\n\r\n        // Add the Game Script\r\n        if (\r\n            document.getElementById(\"canvasScript\") === undefined ||\r\n            document.getElementById(\"canvasScript\") === null\r\n        ) {\r\n            addScript(`${process.env.PUBLIC_URL}/script.js`, \"canvasScript\");\r\n        }\r\n        \r\n        // ------------------\r\n        // Event Listeners\r\n        // ------------------\r\n        const scriptLoaded = (event) => {\r\n            console.log(\"script loaded\");\r\n            setScriptLoaded(true);\r\n        }\r\n        // Runs when the game has completed\r\n        const onComplete = (event) => {\r\n            // Your logic here\r\n            console.log(\"Game Complete\");\r\n            setState(\"COMPLETED\")\r\n        };\r\n    \r\n        // Add event listener for when the game is complete\r\n        window.addEventListener('completed', onComplete);\r\n        window.addEventListener(\"scriptLoaded\", scriptLoaded);\r\n\r\n        return () => {\r\n            // Remove the listeners when the page unloads\r\n            window.removeEventListener('completed', onComplete);\r\n            window.removeEventListener(\"scriptLoaded\", scriptLoaded);\r\n        };\r\n\r\n    }, []);\r\n\r\n    // This runs when the \"Script Loaded\" state is changed\r\n    useEffect(() => {\r\n        console.log(\"SCRIPT LOADED UEF\", scriptLoaded);\r\n        // If the Script Loaded state has been set to true\r\n        if (scriptLoaded) {\r\n            // Check for the previous result data in localStorage\r\n            if (\r\n                // TODO: GIVE THIS A BETTER NAME / MAKE IT DYNAMIC\r\n                localStorage.getItem(\"TestResults\") != undefined &&\r\n                localStorage.getItem(\"TestResults\") != \"undefined\" &&\r\n                JSON.parse(localStorage.getItem(\"TestResults\")).length > 0\r\n            ) {\r\n                // If we have completed the game, we know the results are complete and can be sent\r\n                if (localStorage.getItem(\"completed\") === true || localStorage.getItem(\"completed\") === \"true\") {\r\n                    console.warn(\"COMPLETE IS TRUE\");\r\n                    // We have previously completed but sending didn't work\r\n                    // Should redirect back to completed page\r\n                    // But should make a note that they are returning so that can abandon\r\n                    setGameState({ ...gameState, returning: true });\r\n                    setState(\"COMPLETED\");\r\n                    return\r\n                }\r\n                // Otherwise, we want to remove partial results and restart\r\n                console.log(\"Previous Data found, removing\");\r\n                setGameState(localStorage.removeItem(\"TestResults\"));\r\n            }\r\n            setState(\"PLAYING\");\r\n        }\r\n    }, [scriptLoaded]);\r\n\r\n\r\n    console.log(state);\r\n\r\n\r\n    const root = document.getElementById(\"root\");\r\n    const canvas = document.getElementById(\"canvas\");\r\n    // Now that we have set if we are using root or canvas\r\n    // Handle the state to return the right view and data\r\n    switch (state) {\r\n        case \"COMPLETED\":\r\n            root.hidden = false;\r\n            canvas.hidden = true;\r\n            return <Completed gameState={gameState} />;\r\n            break;\r\n        case \"PLAYING\":\r\n            // root.hidden = false;\r\n            // canvas.hidden = true;\r\n            // return <Completed gameState={gameState} />;\r\n            root.hidden = true;\r\n            canvas.hidden = false;\r\n            return null;\r\n            break;\r\n        case \"ADDSCRIPT\":\r\n            // return <Completed gameState={gameState} />;\r\n            return <LoadingScript />\r\n        default:\r\n            return null;\r\n    }\r\n\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
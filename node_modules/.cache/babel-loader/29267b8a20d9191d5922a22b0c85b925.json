{"ast":null,"code":"import _asyncToGenerator from\"/Users/msg74/Desktop/powers_lab/psychedelics_dissertation/Aim1_Online_Survey_Tasks/Tasks/SpaceGame/spacejunk_bl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";function _regeneratorRuntime(){\"use strict\";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime=function _regeneratorRuntime(){return e;};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value;},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",c=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function define(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e];}try{define({},\"\");}catch(t){define=function define(t,e,r){return t[e]=r;};}function wrap(t,e,r,n){var i=e&&e.prototype instanceof Generator?e:Generator,a=Object.create(i.prototype),c=new Context(n||[]);return o(a,\"_invoke\",{value:makeInvokeMethod(t,r,c)}),a;}function tryCatch(t,e,r){try{return{type:\"normal\",arg:t.call(e,r)};}catch(t){return{type:\"throw\",arg:t};}}e.wrap=wrap;var h=\"suspendedStart\",l=\"suspendedYield\",f=\"executing\",s=\"completed\",y={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var p={};define(p,a,function(){return this;});var d=Object.getPrototypeOf,v=d&&d(d(values([])));v&&v!==r&&n.call(v,a)&&(p=v);var g=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(p);function defineIteratorMethods(t){[\"next\",\"throw\",\"return\"].forEach(function(e){define(t,e,function(t){return this._invoke(e,t);});});}function AsyncIterator(t,e){function invoke(r,o,i,a){var c=tryCatch(t[r],t,o);if(\"throw\"!==c.type){var u=c.arg,h=u.value;return h&&\"object\"==typeof h&&n.call(h,\"__await\")?e.resolve(h.__await).then(function(t){invoke(\"next\",t,i,a);},function(t){invoke(\"throw\",t,i,a);}):e.resolve(h).then(function(t){u.value=t,i(u);},function(t){return invoke(\"throw\",t,i,a);});}a(c.arg);}var r;o(this,\"_invoke\",{value:function value(t,n){function callInvokeWithMethodAndArg(){return new e(function(e,r){invoke(t,n,e,r);});}return r=r?r.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg();}});}function makeInvokeMethod(e,r,n){var o=h;return function(i,a){if(o===f)throw new Error(\"Generator is already running\");if(o===s){if(\"throw\"===i)throw a;return{value:t,done:!0};}for(n.method=i,n.arg=a;;){var c=n.delegate;if(c){var u=maybeInvokeDelegate(c,n);if(u){if(u===y)continue;return u;}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===h)throw o=s,n.arg;n.dispatchException(n.arg);}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=f;var p=tryCatch(e,r,n);if(\"normal\"===p.type){if(o=n.done?s:l,p.arg===y)continue;return{value:p.arg,done:n.done};}\"throw\"===p.type&&(o=s,n.method=\"throw\",n.arg=p.arg);}};}function maybeInvokeDelegate(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,\"throw\"===n&&e.iterator.return&&(r.method=\"return\",r.arg=t,maybeInvokeDelegate(e,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),y;var i=tryCatch(o,e.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,y;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=t),r.delegate=null,y):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,y);}function pushTryEntry(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e);}function resetTryEntry(t){var e=t.completion||{};e.type=\"normal\",delete e.arg,t.completion=e;}function Context(t){this.tryEntries=[{tryLoc:\"root\"}],t.forEach(pushTryEntry,this),this.reset(!0);}function values(e){if(e||\"\"===e){var r=e[a];if(r)return r.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function next(){for(;++o<e.length;)if(n.call(e,o))return next.value=e[o],next.done=!1,next;return next.value=t,next.done=!0,next;};return i.next=i;}}throw new TypeError(typeof e+\" is not iterable\");}return GeneratorFunction.prototype=GeneratorFunctionPrototype,o(g,\"constructor\",{value:GeneratorFunctionPrototype,configurable:!0}),o(GeneratorFunctionPrototype,\"constructor\",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,u,\"GeneratorFunction\"),e.isGeneratorFunction=function(t){var e=\"function\"==typeof t&&t.constructor;return!!e&&(e===GeneratorFunction||\"GeneratorFunction\"===(e.displayName||e.name));},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,GeneratorFunctionPrototype):(t.__proto__=GeneratorFunctionPrototype,define(t,u,\"GeneratorFunction\")),t.prototype=Object.create(g),t;},e.awrap=function(t){return{__await:t};},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,c,function(){return this;}),e.AsyncIterator=AsyncIterator,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new AsyncIterator(wrap(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then(function(t){return t.done?t.value:a.next();});},defineIteratorMethods(g),define(g,u,\"Generator\"),define(g,a,function(){return this;}),define(g,\"toString\",function(){return\"[object Generator]\";}),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function next(){for(;r.length;){var t=r.pop();if(t in e)return next.value=t,next.done=!1,next;}return next.done=!0,next;};},e.values=values,Context.prototype={constructor:Context,reset:function reset(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(resetTryEntry),!e)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t);},stop:function stop(){this.done=!0;var t=this.tryEntries[0].completion;if(\"throw\"===t.type)throw t.arg;return this.rval;},dispatchException:function dispatchException(e){if(this.done)throw e;var r=this;function handle(n,o){return a.type=\"throw\",a.arg=e,r.next=n,o&&(r.method=\"next\",r.arg=t),!!o;}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if(\"root\"===i.tryLoc)return handle(\"end\");if(i.tryLoc<=this.prev){var c=n.call(i,\"catchLoc\"),u=n.call(i,\"finallyLoc\");if(c&&u){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);if(this.prev<i.finallyLoc)return handle(i.finallyLoc);}else if(c){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);}else{if(!u)throw new Error(\"try statement without catch or finally\");if(this.prev<i.finallyLoc)return handle(i.finallyLoc);}}}},abrupt:function abrupt(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break;}}i&&(\"break\"===t||\"continue\"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method=\"next\",this.next=i.finallyLoc,y):this.complete(a);},complete:function complete(t,e){if(\"throw\"===t.type)throw t.arg;return\"break\"===t.type||\"continue\"===t.type?this.next=t.arg:\"return\"===t.type?(this.rval=this.arg=t.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===t.type&&e&&(this.next=e),y;},finish:function finish(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),resetTryEntry(r),y;}},catch:function _catch(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;resetTryEntry(r);}return o;}}throw new Error(\"illegal catch attempt\");},delegateYield:function delegateYield(e,r,n){return this.delegate={iterator:values(e),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=t),y;}},e;}import{stringify}from\"querystring\";// import {stringify} from \"qs\";\nvar config=require(\"../config\");// const qs = require('qs');\nvar https=require('follow-redirects').https;var fs=require('fs');var qs=require('querystring');export function awsSaveData(_x){return _awsSaveData.apply(this,arguments);}function _awsSaveData(){_awsSaveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(gameState){var options,req,postData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;// Remove the link ref from the game state\n// const {link, returning, ...rest} = gameState;\n// const stringifiedData = await JSON.stringify({\n//     encrypted_metadata: gameState.encryptedMetadata,\n//     taskName: gameState.taskName,\n//     taskVersion: gameState.taskVersion,\n//     data: await processLabData(gameState.data)\n// });\n// console.log(stringifiedData);\n// const body = new URLSearchParams()\n//     body.append(\"encrypted_metadata\", \"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\");\n//     // data: stringifiedData\n//     body.append(\"data\", '{\"encrypted_metadata\":\"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\",\"taskName\":\"spacejunk_bl\",\"taskVersion\":\"1.0.0\",\"data\":[{\"tutorialRepeated\":false,\"originalHint\":0,\"originalResult\":0,\"participantPosition\":48.382742172553904,\"participantConfidence\":90.3,\"success\":true,\"level\":2,\"distanceMovedX\":40.259740259740276,\"distanceMovedY\":9.7,\"trialScore\":9,\"actualTrialScore\":90,\"timeToComplete\":3504,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":9,\"originalStartPos\":59.151972941784635},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":2,\"distanceMovedX\":84.4155844155843,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":5142,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":19,\"originalStartPos\":-7.165612265223914},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":3,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3414,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":29,\"originalStartPos\":99.75594741253467},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":4,\"distanceMovedX\":64.93506493506487,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3113,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":39,\"originalStartPos\":22.81307238707119},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":5,\"distanceMovedX\":75.32467532467527,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":2678,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":49,\"originalStartPos\":89.56565831340775},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":6,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":20,\"actualTrialScore\":200,\"timeToComplete\":3543,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":69,\"originalStartPos\":-6.727002377060573},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":false,\"level\":6,\"distanceMovedX\":98.70129870129875,\"distanceMovedY\":0,\"trialScore\":-1,\"actualTrialScore\":0,\"timeToComplete\":5137,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":68,\"originalStartPos\":77.74798786666433}]}');\n// console.log(body);\n// // console.log();\n// const response = await (\n//     await fetch(`https://${config.awsLambda.saveTaskData.host}${config.awsLambda.saveTaskData.path}`, {\n//         method: \"POST\",\n//         mode: \"no-cors\",\n//         headers: {\n//             \"Content-Type\": \"application/x-www-form-urlencoded\",\n//             // \"Content-Length\": Buffer.byteLength(body),\n//         },\n//         body: body\n//     })).json();\n// console.log(\"Done\");\noptions={'method':'POST','hostname':'de8cnjde61.execute-api.us-east-2.amazonaws.com','path':'/default/saveTaskData','headers':{'Content-Type':'application/x-www-form-urlencoded'},'maxRedirects':20};req=https.request(options,function(res){var chunks=[];res.on(\"data\",function(chunk){chunks.push(chunk);});res.on(\"end\",function(chunk){console.log(\"END\");console.log(res.statusCode);console.log(res.body);var body=Buffer.concat(chunks);console.log(body.toString());});res.on(\"error\",function(error){console.error(error);});});postData=qs.stringify({'encrypted_metadata':'U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==','survey_url':gameState.surveyUrl,\"link\":gameState.link,'data':'{\"encrypted_metadata\":\"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\",\"taskName\":\"spacejunk_bl\",\"taskVersion\":\"1.0.0\",\"data\":[{\"tutorialRepeated\":false,\"originalHint\":0,\"originalResult\":0,\"participantPosition\":48.382742172553904,\"participantConfidence\":90.3,\"success\":true,\"level\":2,\"distanceMovedX\":40.259740259740276,\"distanceMovedY\":9.7,\"trialScore\":9,\"actualTrialScore\":90,\"timeToComplete\":3504,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":9,\"originalStartPos\":59.151972941784635},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":2,\"distanceMovedX\":84.4155844155843,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":5142,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":19,\"originalStartPos\":-7.165612265223914},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":3,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3414,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":29,\"originalStartPos\":99.75594741253467},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":4,\"distanceMovedX\":64.93506493506487,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3113,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":39,\"originalStartPos\":22.81307238707119},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":5,\"distanceMovedX\":75.32467532467527,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":2678,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":49,\"originalStartPos\":89.56565831340775},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":6,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":20,\"actualTrialScore\":200,\"timeToComplete\":3543,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":69,\"originalStartPos\":-6.727002377060573},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":false,\"level\":6,\"distanceMovedX\":98.70129870129875,\"distanceMovedY\":0,\"trialScore\":-1,\"actualTrialScore\":0,\"timeToComplete\":5137,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":68,\"originalStartPos\":77.74798786666433}]}'});req.write(postData);req.end();// return response;\n_context.next=13;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(\"Error sending data: \".concat(_context.t0));console.log(_context.t0.message);return _context.abrupt(\"return\",false);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return _awsSaveData.apply(this,arguments);}export function awsFetchLink(_x2){return _awsFetchLink.apply(this,arguments);}/**\r\n * This is currently empty as no data manipulation is needed, \r\n * but this would be a good spot to handle data changes before \r\n * being sent to the lambda function / storage\r\n * @param {*} data \r\n * @returns \r\n */function _awsFetchLink(){_awsFetchLink=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(encryptedMetadata){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"https:///\".concat(config.awsLambda.fetchLink.host).concat(config.awsLambda.fetchLink.path),{method:\"POST\",// headers: {\n//     \"Content-Type\": \"application/x-www-form-urlencoded\",\n//     \"Content-Length\": Buffer.byteLength(postData)\n// },\nbody:{encrypted_metadata:encryptedMetadata}// body: postData\n});case 3:_context2.next=5;return _context2.sent.json();case 5:response=_context2.sent;console.log(\"Done\");return _context2.abrupt(\"return\",response);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(\"Error fetching link: \".concat(_context2.t0));return _context2.abrupt(\"return\",null);case 14:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return _awsFetchLink.apply(this,arguments);}function processLabData(_x3){return _processLabData.apply(this,arguments);}function _processLabData(){_processLabData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",data);case 1:case\"end\":return _context3.stop();}},_callee3);}));return _processLabData.apply(this,arguments);}","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","stringify","config","require","https","fs","qs","awsSaveData","_x","_awsSaveData","apply","arguments","_asyncToGenerator","_callee","gameState","options","req","postData","_callee$","_context","request","res","chunks","on","chunk","console","log","statusCode","body","Buffer","concat","toString","error","surveyUrl","link","write","end","t0","message","awsFetchLink","_x2","_awsFetchLink","_callee2","encryptedMetadata","response","_callee2$","_context2","fetch","awsLambda","fetchLink","host","path","encrypted_metadata","json","processLabData","_x3","_processLabData","_callee3","data","_callee3$","_context3"],"sources":["/Users/msg74/Desktop/powers_lab/psychedelics_dissertation/Aim1_Online_Survey_Tasks/Tasks/SpaceGame/spacejunk_bl/src/functions/saveTaskData.js"],"sourcesContent":["import { stringify } from \"querystring\";\r\n// import {stringify} from \"qs\";\r\nconst config = require(\"../config\");\r\n// const qs = require('qs');\r\nvar https = require('follow-redirects').https;\r\nvar fs = require('fs');\r\n\r\nvar qs = require('querystring');\r\n\r\n\r\nexport async function awsSaveData (gameState) {\r\n    try {\r\n        // Remove the link ref from the game state\r\n        // const {link, returning, ...rest} = gameState;\r\n\r\n        // const stringifiedData = await JSON.stringify({\r\n        //     encrypted_metadata: gameState.encryptedMetadata,\r\n        //     taskName: gameState.taskName,\r\n        //     taskVersion: gameState.taskVersion,\r\n        //     data: await processLabData(gameState.data)\r\n        // });\r\n        // console.log(stringifiedData);\r\n        // const body = new URLSearchParams()\r\n        //     body.append(\"encrypted_metadata\", \"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\");\r\n        //     // data: stringifiedData\r\n        //     body.append(\"data\", '{\"encrypted_metadata\":\"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\",\"taskName\":\"spacejunk_bl\",\"taskVersion\":\"1.0.0\",\"data\":[{\"tutorialRepeated\":false,\"originalHint\":0,\"originalResult\":0,\"participantPosition\":48.382742172553904,\"participantConfidence\":90.3,\"success\":true,\"level\":2,\"distanceMovedX\":40.259740259740276,\"distanceMovedY\":9.7,\"trialScore\":9,\"actualTrialScore\":90,\"timeToComplete\":3504,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":9,\"originalStartPos\":59.151972941784635},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":2,\"distanceMovedX\":84.4155844155843,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":5142,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":19,\"originalStartPos\":-7.165612265223914},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":3,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3414,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":29,\"originalStartPos\":99.75594741253467},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":4,\"distanceMovedX\":64.93506493506487,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3113,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":39,\"originalStartPos\":22.81307238707119},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":5,\"distanceMovedX\":75.32467532467527,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":2678,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":49,\"originalStartPos\":89.56565831340775},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":6,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":20,\"actualTrialScore\":200,\"timeToComplete\":3543,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":69,\"originalStartPos\":-6.727002377060573},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":false,\"level\":6,\"distanceMovedX\":98.70129870129875,\"distanceMovedY\":0,\"trialScore\":-1,\"actualTrialScore\":0,\"timeToComplete\":5137,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":68,\"originalStartPos\":77.74798786666433}]}');\r\n        // console.log(body);\r\n        // // console.log();\r\n        // const response = await (\r\n        //     await fetch(`https://${config.awsLambda.saveTaskData.host}${config.awsLambda.saveTaskData.path}`, {\r\n        //         method: \"POST\",\r\n        //         mode: \"no-cors\",\r\n        //         headers: {\r\n        //             \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        //             // \"Content-Length\": Buffer.byteLength(body),\r\n        //         },\r\n        //         body: body\r\n        //     })).json();\r\n        // console.log(\"Done\");\r\n\r\n\r\n        var options = {\r\n          'method': 'POST',\r\n          'hostname': 'de8cnjde61.execute-api.us-east-2.amazonaws.com',\r\n          'path': '/default/saveTaskData',\r\n          'headers': {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          },\r\n          'maxRedirects': 20\r\n        };\r\n        \r\n        var req = https.request(options, function (res) {\r\n          var chunks = [];\r\n        \r\n          res.on(\"data\", function (chunk) {\r\n            chunks.push(chunk);\r\n          });\r\n        \r\n          res.on(\"end\", function (chunk) {\r\n            console.log(\"END\");\r\n            console.log(res.statusCode);\r\n            console.log(res.body);\r\n            var body = Buffer.concat(chunks);\r\n            console.log(body.toString());\r\n          });\r\n        \r\n          res.on(\"error\", function (error) {\r\n            console.error(error);\r\n          });\r\n        });\r\n        \r\n        var postData = qs.stringify({\r\n          'encrypted_metadata': 'U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==',\r\n          'survey_url': gameState.surveyUrl,\r\n          \"link\": gameState.link,\r\n          'data': '{\"encrypted_metadata\":\"U2FsdGVkX1+H0Yb9Y1VrqhnHPXkv2xHkCwc29hSAyVr0DMaKQNjBWnbje4JMrWAJl4+mI836qL95znea8Z2YLg==\",\"taskName\":\"spacejunk_bl\",\"taskVersion\":\"1.0.0\",\"data\":[{\"tutorialRepeated\":false,\"originalHint\":0,\"originalResult\":0,\"participantPosition\":48.382742172553904,\"participantConfidence\":90.3,\"success\":true,\"level\":2,\"distanceMovedX\":40.259740259740276,\"distanceMovedY\":9.7,\"trialScore\":9,\"actualTrialScore\":90,\"timeToComplete\":3504,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":9,\"originalStartPos\":59.151972941784635},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":2,\"distanceMovedX\":84.4155844155843,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":5142,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":19,\"originalStartPos\":-7.165612265223914},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":3,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3414,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":29,\"originalStartPos\":99.75594741253467},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":4,\"distanceMovedX\":64.93506493506487,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":3113,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":39,\"originalStartPos\":22.81307238707119},{\"tutorialRepeated\":false,\"originalHint\":0.5,\"originalResult\":-0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":true,\"level\":5,\"distanceMovedX\":75.32467532467527,\"distanceMovedY\":0,\"trialScore\":10,\"actualTrialScore\":100,\"timeToComplete\":2678,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":49,\"originalStartPos\":89.56565831340775},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":100,\"participantConfidence\":100,\"success\":true,\"level\":6,\"distanceMovedX\":83.1168831168831,\"distanceMovedY\":0,\"trialScore\":20,\"actualTrialScore\":200,\"timeToComplete\":3543,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":69,\"originalStartPos\":-6.727002377060573},{\"tutorialRepeated\":false,\"originalHint\":-0.5,\"originalResult\":0.5,\"participantPosition\":0,\"participantConfidence\":100,\"success\":false,\"level\":6,\"distanceMovedX\":98.70129870129875,\"distanceMovedY\":0,\"trialScore\":-1,\"actualTrialScore\":0,\"timeToComplete\":5137,\"timedOut\":false,\"timedOutCount\":0,\"reward\":0,\"totalScore\":68,\"originalStartPos\":77.74798786666433}]}'\r\n        });\r\n        \r\n        req.write(postData);\r\n        \r\n        req.end();\r\n\r\n        // return response;\r\n    }\r\n    catch (e) {\r\n        console.log(`Error sending data: ${e}`);\r\n        console.log(e.message);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function awsFetchLink(encryptedMetadata) {\r\n    try {\r\n        const response = await (\r\n            await fetch(`https:///${config.awsLambda.fetchLink.host}${config.awsLambda.fetchLink.path}`,\r\n                {\r\n                    method: \"POST\",\r\n                    // headers: {\r\n                    //     \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    //     \"Content-Length\": Buffer.byteLength(postData)\r\n                    // },\r\n                    body: { encrypted_metadata: encryptedMetadata }\r\n                    // body: postData\r\n                }\r\n            )\r\n        ).json();\r\n        console.log(\"Done\");\r\n        return response;\r\n    }\r\n    catch (e) {\r\n        console.log(`Error fetching link: ${e}`);\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * This is currently empty as no data manipulation is needed, \r\n * but this would be a good spot to handle data changes before \r\n * being sent to the lambda function / storage\r\n * @param {*} data \r\n * @returns \r\n */\r\nasync function processLabData(data) {\r\n    // exportData.encrypted_metadata = encryptedMetadata;\r\n    // exportData.taskName = config.taskName;\r\n    // exportData.taskVersion = config.taskVersion;\r\n    // exportData.data = this.processLabJsData(labJsData);\r\n\r\n    return data;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}